{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","GoodsList","visibleGoods","map","good","App","useState","sortField","setSortField","reverse","setReverse","goods","prepareGoods","sort","good1","good2","localeCompare","length","getPrepareGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"0OAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAoB,SA2BnB,IAAMC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACvB,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SAKFC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMR,EArCR,SAAyBS,EAAzB,GAAyD,IAAvBJ,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACrCG,EAAY,UAAOd,GAqBzB,OAnBIS,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKR,EACH,OAAOe,EAAME,cAAcD,GAE7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAaH,UAGRG,EAecM,CAAgBpB,EAAiB,CAAES,YAAWE,YAOnE,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAaT,IAC5BsB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAAE,WAAYf,IAAcR,KAH9D,iCAQA,wBACEqB,QAAS,kBAAMZ,EAAaR,IAC5BqB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYf,IAAcP,KAHjE,4BAQA,wBACEoB,QAAS,kBAAMV,GAAYD,IAC3BY,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,YAAab,KAHpD,sBAQEF,GAAaE,IACb,wBACEW,QAlCS,WACjBZ,EAAa,IACbE,GAAW,IAiCHW,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWjB,aAAcA,QCrG/BqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c17402f6.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'Alphabetically';\nconst SORT_FIELD_LENGTH = 'Length';\n\nfunction getPrepareGoods(goods, { sortField, reverse }) {\n  const prepareGoods = [...goodsFromServer];\n\n  if (sortField) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const GoodsList = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPrepareGoods(goodsFromServer, { sortField, reverse });\n\n  const resetGoods = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SORT_FIELD_LENGTH })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !reverse })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            onClick={resetGoods}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList visibleGoods={visibleGoods} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}